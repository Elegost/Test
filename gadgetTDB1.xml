<?xml version="1.0" encoding="UTF-8" ?>
<Module>
   <ModulePrefs title="Gadget TDB 1"
                description="Gadget permettant d'afficher des graphiques en fonction d'un fichier Spreadsheet"
                height="800" width="600" 
                author="EL3GOST">
    <Require feature="dynamic-height"/>
  </ModulePrefs>
  <UserPref name="idSite" display_name="Identifiant du site" default_value="modele" />
   <Content type="html"><![CDATA[
   var prefs = new gadgets.Prefs();

	<!DOCTYPE html>
	<?!= include('Stylesheet'); ?>
	<link rel="stylesheet" href="https://ssl.gstatic.com/docs/script/css/add-ons.css">
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js">
	</script>

	<div class="textRes" id="main"> </div>

	<form id="forme_site">
 		 <div class="input"><label>Nom du site * : </label><input type="text" name="site_name" id="site_name" required /></div>
  
  		<div class="submit"><input type="button" class="create" value="Lancer" onclick="goToSiteNameSet()" />
  		<div id="spinner" style="display: none;"><img src="https://lh3.googleusercontent.com/mhggb7iRqaNHcZLDnqJIZJbaiK5jjdm42uBiSlKPJePzCUxgS8vX=s32-no"  alt="loading..."/></div></div>
	</form>
	<div id="output"></div>
	<div id="error_message" class="error" ></div>
  


	 <script>
    		google.load('visualization', '1', {
    	 	packages: ['corechart', 'bar']
   		 });
    		google.setOnLoadCallback(repriseContenu);

    	function repriseContenu() {
      		google.script.run.withSuccessHandler(writeRes).repriseContenu();
    	}

    	function writeRes(res) {
     	 	document.getElementById("main").innerHTML += res;
    	}
    
  	</script>

	<?!= include('JavaScript'); ?>

	function doGet() {
  return HtmlService.createTemplateFromFile("index").evaluate();
}

function include(filename) {
  return HtmlService.createHtmlOutputFromFile(filename).getContent();
}

var HEADERNOMSITE = 'Nom du site';
var HEADERCLEREPRISE = 'Clé de la feuille de reprise de contenu';
var LISTHEADERREPRISECONTENU = [HEADERNOMSITE, HEADERCLEREPRISE];

function testRepriseContenu(){
 var test = repriseContenu('GESCIA');
 var toto = 0;
}

/*********
* Fonction principale du module repriseContenu qui est appelé pour récupérer les infos d'un site précis
* Il faudra peut etre en créer une pour le faire pour chacun des sites
*********/
function repriseContenu() {
  var userProperties = PropertiesService.getUserProperties();
  var siteName = userProperties.getProperty("SITE_NAME");
  Logger.log("site_name : " + siteName)
  var ssGeneral = openSpreadsheet("1TwVRZ2M0jdjWhD4MUHYD1MED1udEmZocupwfTz2oW1o");
  var sheetRepriseContenu = accessSheetByName(ssGeneral, 'Données globales des sites');
  var listSites = getListOfSites(HEADERCLEREPRISE);
  var listNomSite = getListOfSites(HEADERNOMSITE);
  var i = 1;
  var found = false;
  for(; i < listNomSite.length; i++){
    if(listNomSite[i][0] == siteName){ 
      found = true; 
      break; 
    }
  }
  if(found){
    var ssheetSite = openSpreadsheet(listSites[i][0]);
    var sheetSite = accessSheetByName(ssheetSite, 'Contenu en Français');
    var value = sheetSite.getRange("E1").getValue();
    var listRes = value.split(" - ");
    return listRes[0] + " - " + listRes[1] + "\n" + listRes[2] + "\n" + listRes[3];
  }
}

/*********
* ouvre un google sheets en lui fournissant son id
*********/
function openSpreadsheet(idSpreadSheet){
  var spreadSheet = SpreadsheetApp.openById(idSpreadSheet);
  Logger.log(spreadSheet.getName() + " spreadsheet opened by this script");
  return spreadSheet;
}

/*********
* ouvre une feuille spécifique dans une google sheets par rapport au nom de la feuille
*********/
function accessSheetByName(spreadSheet, label){
  var sheet = spreadSheet.getSheetByName(label);
  if(sheet == null){
    sheet = spreadSheet.insertSheet(label);
  }
  Logger.log(sheet.getName() + " sheet opened by this script")
  return sheet;
}

/*********
* Récupére une des listes de données de la sheet globale
*********/
function getListOfSites(headerLabel){
  var ssGeneral = openSpreadsheet("1TwVRZ2M0jdjWhD4MUHYD1MED1udEmZocupwfTz2oW1o");
  var sheetListOfSite = accessSheetByName(ssGeneral, 'Données globales des sites');
  var col = getColIndex(sheetListOfSite, headerLabel);
  return getColValues(sheetListOfSite, col);
}

function setSiteName(siteName){
  Logger.log("enregisrement propriétés : " + siteName);
  var userProperties = PropertiesService.getUserProperties();
  userProperties.setProperty("SITE_NAME", siteName);
}

/*********
* cherche la position de la colonne où se trouve l'entête passé en paramètre
* renvoi la colonne quand trouvé
* renvoi -1 si le header n'a pas été trouvé
*********/
function getColIndex(sheet, labelHeader) {
  var headerLine = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues();
  headerLine = headerLine.pop();
  for (var col = headerLine.length - 1 ; col >= 0; col--){
    if(strCompare(headerLine[col], labelHeader)){
      return col + 1;
    }
  }
  return -1;
}

/*********
* Enlève les espaces blanc avant et après une string
*********/
function trim(s)
{
  var j = 0;
  for(var i = 0; i < s.length; i++){
    if(s.charAt(i) != " ") { break } else { j += 1 }
  }
  s = s.substring(j, s.length);
  j = s.length;
  for(var i = s.length - 1; i >= 0; i--){
    if(s.charAt(i) != " ") { break } else { j -= 1 }
  }
  s = s.substring(0, j);
  return s;
}

/*********
* Comparaison de 2 string
*********/
function strCompare(s1, s2){
  s1 = s1.trim();
  s2 = s2.trim();
  return s1 == s2;
}

/*********
* Similaire a getRowValues mais pour une colonne
*********/
function getColValues(sheet, colIndex){
  if (colIndex < 1){ throw 'Header introuvable ' + sheet.getName() }
  var len = sheet.getLastRow();
  if(len == 0){ return [] }
  return sheet.getRange(1, colIndex, len, 1).getValues();
}

function getLock(){
  return lock;
}

<style>
  #forme_site{
    display: inline-block;
    margin:5px;
    padding:5px;
    background : #f5f5f5;
    font-weight : normal;
    
  }
  #forme_site input[type="text"]{
    float:right;
    margin-left: 10px;
  }
  .input{
    clear:both;
    display:block
  }
  .input label{
    display:inline-block;
    height:25px
  }
  .input.input_lock {
    margin-top: 15px;
  }
  input[type="button"]{
    margin-top:15px !important;
    left: 44.8%;
    position: relative;
  }
  input[type="text"]{
    width: 385px;
  }
  #output{
    font-weight: bold;
  }
  #spinner{
    float: right;
    margin-top: 15px;
    height:29px;
  }
  .textRes{
      background : #f5f5f5;
      font-size: 14px;
      font-family: Verdana, sans-serif;
      border: 3px solid black;
      border-radius: 9px;
      text-align: center;
      padding: 9px;
  }
  
</style>
	
var lock = 1;
function siteNameSet(formObject){
  // Par défaut on ne peux pas modifier les données du script
  // Si on change lock à 0, on pourras
  // Mais il ne faudra pas oublié d'enlevé les disabled dans index
  var site_info = formObject;
  var site_name = site_info.site_name;
  if(!site_name){
    throw new Error("Il faut un nom au nouvel espace");
  } else {
    return setSiteName(site_name);
  }
}

   </script>
<script>
google.script.run.withSuccessHandler(disabledAll).getLock();

function goToSiteNameSet(){
  if($("#site_name").val()){
    var form = $("#forme_site").get(0);
    $("input[type='button']").prop('disabled', true);
    $("#site_name").prop('readonly', true);
    $("#spinner").css('display', 'inline-block');
    $("#error_message").html(""); 
    $("#output").html(""); 
    google.script.run.withFailureHandler(onFailure).withSuccessHandler(onSuccess).siteNameSet(form);
  }
}

function onSuccess(output){
    var message = "recharger la page";
    $("#spinner").css('display', 'none');
    $("input[type='button']").prop('disabled', false);
    $("#site_name").prop('disabled', false);
    $("#site_name").val("");
    var element = $("#output");
    element.html(message);
}

function onFailure(error) {
  var element = $("#error_message");
  $("#spinner").css('display', 'none');
  $("input[type='button']").prop('disabled', false);
  $("#site_name").prop('readonly', false);
  element.html(error.message); 
}

function disabledAll(lock){
  if(lock){
    $("input").prop('disabled', true);
    $("#site_name").prop('disabled', false);
    $("input[type='button']").prop('disabled', false);
  }
  else{
    $(".input_lock input").prop('disabled', false);
    $(".input_lock").css('display', 'block');
  }
}
</script>
   ]]>
  </Content>
</Module>
